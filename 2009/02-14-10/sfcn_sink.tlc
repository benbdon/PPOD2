%% File : sfcn_sink.tlc
%%
%% Description: 
%%   Real-Time Workshop TLC Code Generation file for sfcn_sink
%%
%% Simulink version      : 7.1 (R2008a) 23-Jan-2008
%% TLC file generated on : 10-Jul-2009 10:58:51

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'sfcn_sink';
     def.OutputFcnSpec = 'sinkOutput(double u1[1], double p1[1], uint16 work1[1], double work2[1])';
     def.StartFcnSpec = 'sinkStart(uint16 work1[1], double work2[1])';
     def.TerminateFcnSpec = 'sinkTerminate(uint16 work1[1])';
     def.HeaderFiles = {'sink.h'};
     def.SourceFiles = {'sink.c'};
     def.IncPaths = {'C:\Documents and Settings\LIMS\Desktop\PPOD_6D\06-18-09'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
 %/

%implements sfcn_sink "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
  %%
  %% The Target Language must be C
  %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
  %endif

  %<LibAddToCommonIncludes("sink.h")>
  %<LibAddToModelSources("sink")>

  %%
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction

%% Function: Start ========================================================
%%
%function Start(block, system) Output
  %%
  %assign work1_ptr = LibBlockDWorkAddr(work1, "", "", 0)
  %assign work2_ptr = LibBlockDWorkAddr(work2, "", "", 0)
  %%
    /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
  sinkStart( %<work1_ptr>, %<work2_ptr>);
  %%
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %%
  %assign p1_ptr = LibBlockParameterBaseAddr(p1)
  %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
  %assign work1_ptr = LibBlockDWorkAddr(work1, "", "", 0)
  %assign work2_ptr = LibBlockDWorkAddr(work2, "", "", 0)
  %%
  sinkOutput( %<u1_ptr>, %<p1_ptr>, %<work1_ptr>, %<work2_ptr>);
  %%
%endfunction

%% Function: Terminate ====================================================
%%
%function Terminate(block, system) Output
  %%
  %assign work1_ptr = LibBlockDWorkAddr(work1, "", "", 0)
  %%
    /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
  sinkTerminate( %<work1_ptr>);
  %%
%endfunction

%% [EOF]
